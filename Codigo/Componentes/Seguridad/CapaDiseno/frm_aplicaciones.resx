<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>