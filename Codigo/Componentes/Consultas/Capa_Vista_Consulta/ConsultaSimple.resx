<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        q1+//wJBIKGthcllsAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnConsultar2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>